worker_processes  1;
error_log logs/error.log;
events {
    worker_connections 1024;
}
http {
    upstream database {
        postgres_server 127.0.0.1 dbname=postgres
                                  user=postgres;
    }
    server {
        listen 8080;
        root /site/;

        gzip on;
        location / {
            autoindex on;
        }
        location ~ /query/json/(?<query>.*) {
            rds_json on;
            default_type application/json;

            postgres_pass database;
            postgres_query $query;
        }
        #error_page 500 /error;
        #location /error {
        #    content_by_lua '
        #        
        #        ngx.say("foo bar baz")
        #    ';
        #}

        #location ~ /query/txt/(?<query>.*) {
        #  rds_csv on;
        #  postgres_pass database;
        #  default_type text/html;
        #  postgres_query $query;
        #  header_filter_by_lua '
        #    ngx.log(ngx.ERR, "foo")
        #    ngx.log(ngx.ERR, ngx.var.postgres_error)
        #    if ngx.status ~= ngx.HTTP_OK then
        #      ngx.var.footer = "\\n\\n" .. ngx.var.postgres_error
        #    end
        #  ';
        #  #set $footer '';
        #  #echo_after_body $footer;
        #}
        location ~ /query/csv/(?<query>.*) {
            rds_csv on;
            rds_csv_row_terminator "\n";
            default_type text/csv;

            postgres_pass database;
            postgres_query $query;
        }
    }
}

#while : ; do; sleep 2; /usr/local/openresty/nginx/sbin/nginx -p / -c /conf/nginx.conf -s reload ; done

# sudo docker stop acris; sudo docker rm acris; sudo docker run -v $(pwd)/site:/site -v $(pwd)/conf:/conf -d --name acris -p 8080:8080 thegovlab/docker4data-acris:latest 'while : ; do; sleep 2; /usr/local/openresty/nginx/sbin/nginx -p / -c /conf/nginx.conf -s reload; done'

# restart nginx
# /usr/local/openresty/nginx/sbin/nginx -p / -c /conf/nginx.conf -s reload
# test
#rm -f out.html && wget 'http://localhost:8080/query/SELECT * FROM acris_references LIMIT 1' -O out.html && cat out.html


# prereqs
#apt-get update --fix-missing
#apt-get install libreadline-dev libncurses5-dev libpcre3-dev libssl-dev perl make build-essential postgresql-server-dev-9.3

# build nginx
#./configure --with-http_postgres_module --with-pcre-jit
#make
#make install

# run nginx
#/usr/local/openresty/nginx/sbin/nginx -p / -c /conf/nginx.conf


            #default_type text/html;
            #content_by_lua '
            #    ngx.say(\"<p>hello, world</p>\")
            #';

            #postgres_query 'SELECT COUNT(*), \"$1\" as foo FROM acris_references';
